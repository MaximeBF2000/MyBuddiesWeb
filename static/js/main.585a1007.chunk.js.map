{"version":3,"sources":["context/initState.js","context/reducer.js","context/context.js","hooks/firebase.js","components/Login.js","hooks/useFirestore.js","components/ConversationItem.js","components/AddConversation.js","components/Sidebar.js","components/DeleteConvModal.js","components/AddUser.js","components/ManagePeopleModal.js","components/MessageHeader.js","components/AddMessage.js","components/Messages.js","App.js","index.js"],"names":["user","conversations","currentConversation","state","action","type","payload","GeneralContext","createContext","initialState","StateProvider","children","useReducer","reducer","dispatch","Provider","value","useStore","useContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fireStore","firestore","GoogleAuthProvider","auth","Login","login","a","signInWithPopup","res","console","error","message","className","onClick","useFirestore","collectionName","useState","docs","setDocs","useEffect","unsub","collection","onSnapshot","snap","documents","forEach","doc","push","data","ConversationItem","conversation","src","img","alt","title","messages","lenght","AddConversation","convName","setConvName","onSubmit","e","preventDefault","_id","uuid","set","id","photoUrl","peopleIncluded","name","displayName","email","placeholder","onChange","target","fontSize","Sidebar","photoURL","map","convo","i","find","people","DeleteConvModal","isOpen","onClose","Modal","open","Button","delete","then","variant","color","AddUser","setName","setEmail","log","alert","update","get","userEmail","filter","deleteUser","MessageHeader","peopleModalOpen","setPeopleModalOpen","deleteConvModalOpen","setDeleteConvModalOpen","Group","DeleteForever","signOut","AddMessage","setMessage","from","content","Messages","updatedCurrentConv","setUpdatedCurrentConv","endMsgRef","useRef","setTimeout","current","scrollIntoView","_updatedCurrentConv","msg","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.585a1007.chunk.js","sourcesContent":["export default {\r\n\tuser: null,\r\n\tconversations: [],\r\n\tcurrentConversation: null,\r\n}\r\n","export default (state, action) => {\r\n\tconst { type, payload } = action\r\n\r\n\tswitch (type) {\r\n\t\tcase \"SET_USER\":\r\n\t\t\treturn { ...state, user: payload }\r\n\t\tcase \"SET_CURRENT_CONVERSATION\":\r\n\t\t\treturn { ...state, currentConversation: payload }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import React, { createContext, useContext, useReducer } from \"react\"\r\nimport initialState from \"./initState\"\r\nimport reducer from \"./reducer\"\r\n\r\nconst GeneralContext = createContext(initialState)\r\n\r\nexport const StateProvider = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n\treturn (\r\n\t\t<GeneralContext.Provider value={{ ...state, dispatch }}>\r\n\t\t\t{children}\r\n\t\t</GeneralContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useStore = () => useContext(GeneralContext)","import firebase from \"firebase\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD4dqP2NyaaEmG2Et8NfmqxSKDmO1Kd0pM\",\r\n  authDomain: \"potesapp-reactnative.firebaseapp.com\",\r\n  databaseURL: \"https://potesapp-reactnative.firebaseio.com\",\r\n  projectId: \"potesapp-reactnative\",\r\n  storageBucket: \"potesapp-reactnative.appspot.com\",\r\n  messagingSenderId: \"277331562406\",\r\n  appId: \"1:277331562406:web:35e1adf83e676b047b8967\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst fireStore = firebase.firestore()\r\nconst GoogleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { firebase, fireStore, GoogleAuthProvider }","import React from \"react\"\r\nimport { useStore } from \"../context/context\"\r\nimport { firebase, GoogleAuthProvider } from \"../hooks/firebase\"\r\n\r\nexport default function Login() {\r\n  const { dispatch } = useStore()\r\n\r\n\tconst login = async () => {\r\n\t\ttry {\r\n      const res = await firebase.auth().signInWithPopup(GoogleAuthProvider)\r\n      dispatch({ type: \"SET_USER\", payload: res.user })\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<h1 className=\"title\">MyBuddies Web - Login</h1>\r\n\t\t\t\t<button className=\"loginBtn\" onClick={login}>\r\n\t\t\t\t\tLogin with Google\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { fireStore } from \"./firebase\"\r\n\r\nexport default function useFirestore(collectionName) {\r\n  const [docs, setDocs] = useState([])\r\n\r\n  useEffect(() => {\r\n    const unsub = fireStore.collection(collectionName).onSnapshot(snap => {\r\n      const documents = []\r\n      snap.docs.forEach(doc => documents.push({ ...doc.data() }))\r\n      setDocs(documents)\r\n    })\r\n\r\n    return () => unsub()\r\n  }, [collectionName])\r\n\r\n  return docs\r\n}","import React from \"react\"\r\nimport { useStore } from \"../context/context\"\r\n\r\nexport default function ConversationItem({ conversation }) {\r\n  const { dispatch } = useStore()\r\n\r\n\tconst handleClick = () => {\r\n    dispatch({ type: \"SET_CURRENT_CONVERSATION\", payload: conversation })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebarConversation\" onClick={handleClick}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={\r\n\t\t\t\t\tconversation?.img ||\r\n\t\t\t\t\t\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/1200px-Unknown_person.jpg\"\r\n\t\t\t\t}\r\n\t\t\t\talt=\"Picture of the conversation\"\r\n\t\t\t\tclassName=\"conversationImg\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"conversationInfos\">\r\n\t\t\t\t<div className=\"conversationTitle\">{conversation?.title}</div>\r\n\t\t\t\t<p className=\"conversationLastText\">\r\n\t\t\t\t\t{conversation?.messages[conversation?.messages.lenght - 1] ||\r\n\t\t\t\t\t\t\"There is no message here.\"}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { useStore } from \"../context/context\"\r\nimport { fireStore } from \"../hooks/firebase\"\r\nimport { v4 as uuid } from \"uuid\"\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\r\n\r\nexport default function AddConversation() {\r\n\tconst [convName, setConvName] = useState(\"\")\r\n\tconst { user } = useStore()\r\n\r\n\tconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    const _id = uuid()\r\n\t\tfireStore.collection(\"conversations\").doc(_id).set({\r\n      id: _id,\r\n\t\t\ttitle: convName,\r\n\t\t\tphotoUrl: \"\",\r\n\t\t\tpeopleIncluded: [{ name: user.displayName, email: user.email }],\r\n\t\t\tmessages: [],\r\n\t\t})\r\n\t\tsetConvName(\"\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"sidebarFooter\" onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"addConversationInput\"\r\n\t\t\t\tplaceholder=\"Add a new conversation here...\"\r\n\t\t\t\tvalue={convName}\r\n\t\t\t\tonChange={e => setConvName(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\" className=\"addConvSubBtn\">\r\n\t\t\t\t<AddCircleIcon className=\"addConvSubIcon\" fontSize=\"large\" />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { useStore } from \"../context/context\"\r\nimport useFirestore from \"../hooks/useFirestore\"\r\n\r\nimport ConversationItem from \"./ConversationItem\"\r\nimport AddConversation from \"./AddConversation\"\r\n\r\nexport default function Sidebar() {\r\n\tconst { user } = useStore()\r\n\tconst conversations = useFirestore(\"conversations\")\r\n\r\n\treturn (\r\n\t\t<aside className=\"sidebar\">\r\n\t\t\t<div className=\"sidebarTop\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={\r\n\t\t\t\t\t\tuser?.photoURL ||\r\n\t\t\t\t\t\t\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/1200px-Unknown_person.jpg\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\talt=\"Profil picture\"\r\n\t\t\t\t\tclassName=\"sidebarProfilPhoto\"\r\n\t\t\t\t/>\r\n\t\t\t\t<h2 className=\"sidebarInfo\">Welcome, {user?.displayName}</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sidebarMain\">\r\n\t\t\t\t{conversations.map((convo, i) => {\r\n\t\t\t\t\tif (convo?.peopleIncluded.find(people => people.email === user?.email)) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ConversationItem\r\n\t\t\t\t\t\t\t\tconversation={convo}\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<AddConversation />\r\n\t\t</aside>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { Modal, Button } from \"@material-ui/core\"\r\nimport { useStore } from \"../context/context\"\r\nimport { fireStore } from \"../hooks/firebase\"\r\n\r\nexport default function DeleteConvModal({ isOpen, onClose }) {\r\n\tconst { currentConversation, dispatch } = useStore()\r\n\r\n\tconst deleteConversation = () => {\r\n\t\tfireStore\r\n\t\t\t.collection(\"conversations\")\r\n\t\t\t.doc(currentConversation.id)\r\n\t\t\t.delete()\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: \"SET_CURRENT_CONVERSATION\", payload: null })\r\n\t\t\t\tonClose()\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal className=\"modal deleteConvModal\" open={isOpen} onClose={onClose}>\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<h3 className=\"modalTitle\">\r\n\t\t\t\t\tAre you sure you want to delete the conversation :{\" \"}\r\n\t\t\t\t\t{currentConversation?.title}\r\n\t\t\t\t</h3>\r\n\t\t\t\t<div className=\"actionButtons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"button deleteBtn\"\r\n            onClick={deleteConversation}\r\n            variant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tYes, Delete\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"button cancelBtn\"\r\n\t\t\t\t\t\tonClick={() => onClose()}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo, Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { useStore } from \"../context/context\"\r\nimport { fireStore } from \"../hooks/firebase\"\r\n\r\nexport default function AddUser() {\r\n\tconst [name, setName] = useState(\"\")\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst { currentConversation, user, dispatch } = useStore()\r\n\r\n\tconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    console.log({name, email})\r\n\t\tif (!(name && email))\r\n\t\t\treturn alert(\"A user must have a name and a valid email adress\")\r\n\t\tif (email === user.email)\r\n\t\t\treturn alert(\"The user is already in the conversation\")\r\n\r\n\t\tfireStore\r\n\t\t\t.collection(\"conversations\")\r\n\t\t\t.doc(currentConversation.id)\r\n\t\t\t.update({\r\n\t\t\t\tpeopleIncluded: [...currentConversation.peopleIncluded, { name, email }],\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tfireStore\r\n\t\t\t\t\t.collection(\"conversations\")\r\n\t\t\t\t\t.doc(currentConversation.id)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(doc => {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: \"SET_CURRENT_CONVERSATION\",\r\n\t\t\t\t\t\t\tpayload: doc.data(),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"addUser\" onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"nameInput input\"\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\tplaceholder=\"User display name...\"\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"mailInput input\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\tplaceholder=\"User email...\"\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\" className=\"submitBtn\">\r\n\t\t\t\tAdd user\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { Modal } from \"@material-ui/core\"\r\nimport { useStore } from \"../context/context\"\r\nimport { fireStore } from \"../hooks/firebase\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\n\r\nimport AddUser from \"./AddUser\"\r\n\r\nexport default function DeleteConvModal({ isOpen, onClose }) {\r\n\tconst { currentConversation, user, dispatch } = useStore()\r\n\r\n\tconst deleteUser = userEmail => {\r\n\t\tfireStore\r\n\t\t\t.collection(\"conversations\")\r\n\t\t\t.doc(currentConversation.id)\r\n\t\t\t.update({\r\n\t\t\t\tpeopleIncluded: currentConversation?.peopleIncluded?.filter(\r\n\t\t\t\t\tpeople => people.email !== userEmail\r\n\t\t\t\t),\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tfireStore\r\n\t\t\t\t\t.collection(\"conversations\")\r\n\t\t\t\t\t.doc(currentConversation.id)\r\n\t\t\t\t\t.get()\r\n\t\t\t\t\t.then(doc => {\r\n\t\t\t\t\t\tif (user.email === userEmail) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: \"SET_CURRENT_CONVERSATION\",\r\n\t\t\t\t\t\t\t\tpayload: null,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: \"SET_CURRENT_CONVERSATION\",\r\n\t\t\t\t\t\t\t\tpayload: doc.data(),\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal className=\"modal managePeopleModal\" open={isOpen} onClose={onClose}>\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<h3 className=\"modalTitle\">People in the conversation</h3>\r\n\t\t\t\t<div className=\"peopleList\">\r\n\t\t\t\t\t{currentConversation?.peopleIncluded?.map((people, i) => (\r\n\t\t\t\t\t\t<div className=\"peopleItem\" key={i}>\r\n\t\t\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t\t\t<div className=\"name\">{people.name}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"email\">{people.email}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<DeleteIcon\r\n\t\t\t\t\t\t\t\tclassName=\"deleteBtn\"\r\n\t\t\t\t\t\t\t\tonClick={() => deleteUser(people.email)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n        <AddUser />\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { DeleteForever, Group } from \"@material-ui/icons\"\r\nimport { useStore } from \"../context/context\"\r\nimport { firebase } from \"../hooks/firebase\"\r\n\r\nimport DeleteConvModal from \"./DeleteConvModal\"\r\nimport ManagePeopleModal from \"./ManagePeopleModal\"\r\n\r\nexport default function MessageHeader() {\r\n\tconst [peopleModalOpen, setPeopleModalOpen] = useState(false)\r\n\tconst [deleteConvModalOpen, setDeleteConvModalOpen] = useState(false)\r\n\tconst { currentConversation, dispatch } = useStore()\r\n\r\n\tconst openPeopleModal = () => {\r\n\t\tif (currentConversation) {\r\n\t\t\tsetPeopleModalOpen(true)\r\n\t\t}\r\n\t}\r\n\tconst openDeleteConvModal = () => {\r\n\t\tif (currentConversation) {\r\n\t\t\tsetDeleteConvModalOpen(true)\r\n\t\t}\r\n\t}\r\n\tconst signOut = () => {\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => dispatch({ type: \"SET_USER\", payload: null }))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"messagesHeader\">\r\n\t\t\t\t<div className=\"convTitle\">\r\n\t\t\t\t\t{currentConversation?.title || \"No conversation selected\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"manageConv\">\r\n\t\t\t\t\t<span title=\"Manage people in the group\">\r\n\t\t\t\t\t\t<Group\r\n\t\t\t\t\t\t\tclassName=\"managePeopleBtn handleConvBtn\"\r\n\t\t\t\t\t\t\tonClick={openPeopleModal}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span title=\"Delete the conversation (irreversible)\">\r\n\t\t\t\t\t\t<DeleteForever\r\n\t\t\t\t\t\t\tclassName=\"deleteConvBtn handleConvBtn\"\r\n\t\t\t\t\t\t\tonClick={openDeleteConvModal}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<button className=\"logOutBtn\" onClick={signOut}>\r\n\t\t\t\t\t\tSign Out\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ManagePeopleModal\r\n\t\t\t\tisOpen={peopleModalOpen}\r\n\t\t\t\tonClose={() => setPeopleModalOpen(false)}\r\n\t\t\t/>\r\n\t\t\t<DeleteConvModal\r\n\t\t\t\tisOpen={deleteConvModalOpen}\r\n\t\t\t\tonClose={() => setDeleteConvModalOpen(false)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { AddCircle } from \"@material-ui/icons\"\r\nimport { fireStore } from \"../hooks/firebase\"\r\nimport { useStore } from \"../context/context\"\r\n\r\nexport default function AddMessage() {\r\n\tconst [message, setMessage] = useState(\"\")\r\n\tconst { currentConversation, user, dispatch } = useStore()\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tif (message) {\r\n\t\t\tif (currentConversation) {\r\n\t\t\t\tfireStore\r\n\t\t\t\t\t.collection(\"conversations\")\r\n\t\t\t\t\t.doc(currentConversation.id)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\tmessages: [\r\n\t\t\t\t\t\t\t...currentConversation.messages,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfrom: {\r\n\t\t\t\t\t\t\t\t\tname: currentConversation?.peopleIncluded.find(\r\n\t\t\t\t\t\t\t\t\t\tpeople => people.email === user.email\r\n\t\t\t\t\t\t\t\t\t).name,\r\n\t\t\t\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tcontent: message,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tfireStore\r\n\t\t\t\t\t\t\t.collection(\"conversations\")\r\n\t\t\t\t\t\t\t.doc(currentConversation.id)\r\n\t\t\t\t\t\t\t.get()\r\n\t\t\t\t\t\t\t.then(doc => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: \"SET_CURRENT_CONVERSATION\",\r\n\t\t\t\t\t\t\t\t\tpayload: doc.data(),\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\tsetMessage(\"\")\r\n\t\t\t} else {\r\n\t\t\t\talert(\"You need to be in a conversation to write a message\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"messageFooter\" onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"addMessageInput\"\r\n\t\t\t\tplaceholder=\"Add a new message here...\"\r\n\t\t\t\tvalue={message}\r\n\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\" className=\"addMsgSubBtn\">\r\n\t\t\t\t<AddCircle className=\"addMsgSubIcon\" fontSize=\"large\" />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport { useStore } from \"../context/context\"\r\nimport useFirestore from \"../hooks/useFirestore\"\r\n\r\nimport MessageHeader from \"./MessageHeader\"\r\nimport AddMessage from \"./AddMessage\"\r\n\r\nexport default function Messages() {\r\n\tconst [updatedCurrentConv, setUpdatedCurrentConv] = useState(null)\r\n\tconst { currentConversation, user } = useStore()\r\n\tconst conversations = useFirestore(\"conversations\")\r\n\r\n\t// START - Scroll to bottom on new message\r\n\tconst endMsgRef = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => endMsgRef.current.scrollIntoView(), 500)\r\n\t}, [currentConversation])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst _updatedCurrentConv = conversations.find(\r\n\t\t\tconvo => convo?.id === currentConversation?.id\r\n\t\t)\r\n\t\tsetUpdatedCurrentConv(_updatedCurrentConv)\r\n\t\tendMsgRef.current.scrollIntoView()\r\n\t}, [conversations, currentConversation])\r\n\t// END\r\n\r\n\treturn (\r\n\t\t<div className=\"messageContainer\">\r\n\t\t\t<MessageHeader />\r\n\t\t\t<div className=\"messages\">\r\n\t\t\t\t{updatedCurrentConv?.messages?.map((msg, i) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`singleMessage ${\r\n\t\t\t\t\t\t\tmsg?.from.email === user.email ? \"fromMe\" : \"fromOther\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"msgFrom\">{msg?.from.name}</span>\r\n\t\t\t\t\t\t<p className=\"msgContent\">{msg.content}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t<div ref={endMsgRef} />\r\n\t\t\t</div>\r\n\t\t\t<AddMessage />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import \"regenerator-runtime/runtime\"\r\nimport React from \"react\"\r\nimport \"./styles/App.scss\"\r\nimport { useStore } from \"./context/context\"\r\n\r\nimport Login from \"./components/Login\"\r\nimport Sidebar from \"./components/Sidebar\"\r\nimport Messages from \"./components/Messages\"\r\n\r\nexport default function App() {\r\n\tconst { user } = useStore()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{user ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Sidebar />\r\n\t\t\t\t\t<Messages />\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Login />\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { StateProvider } from \"./context/context\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n\t<StateProvider>\r\n\t\t<App />\r\n\t</StateProvider>,\r\n\tdocument.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}